<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Person', 'doctrine');

/**
 * BasePerson
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property string $people_group
 * @property string $adress
 * @property string $email
 * 
 * @method integer getId()           Returns the current record's "id" value
 * @method string  getCode()         Returns the current record's "code" value
 * @method string  getName()         Returns the current record's "name" value
 * @method string  getPeopleGroup()  Returns the current record's "people_group" value
 * @method string  getAdress()       Returns the current record's "adress" value
 * @method string  getEmail()        Returns the current record's "email" value
 * @method Person  setId()           Sets the current record's "id" value
 * @method Person  setCode()         Sets the current record's "code" value
 * @method Person  setName()         Sets the current record's "name" value
 * @method Person  setPeopleGroup()  Sets the current record's "people_group" value
 * @method Person  setAdress()       Sets the current record's "adress" value
 * @method Person  setEmail()        Sets the current record's "email" value
 * 
 * @package    lostbook
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePerson extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('person');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('people_group', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('adress', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}